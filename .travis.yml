language: julia

os:
  - linux
  - osx
  - windows
  - freebsd

julia:
  - 1.0
  - 1
  - nightly

notifications:
  email:
    recipients: abel.s.siqueira@gmail.com
    on_success: never
    on_failure: change

branches:
  only:
    - master
    - /^v\d+\.\d+(\.\d+)?(-\S*)?$/ # tags

jobs:
  allow_failures:
    - julia: nightly
  include:
    - &breakage
      stage: Breakage
      julia: 1
      os: linux
      if: type = pull_request AND fork = false
      script:
        - julia -e 'using Pkg; pkg"add Git"; pkg"add JSON"; include("test/test-breakage.jl")'
      after_success: skip
      env: PKG=AmplNLReader     VERSION=master
    - <<: *breakage
      env: PKG=AmplNLReader     VERSION=stable
    - <<: *breakage
      env: PKG=CUTEst           VERSION=master
      addons:
        apt_packages:
          - gfortran
    - <<: *breakage
      env: PKG=CUTEst           VERSION=stable
      addons:
        apt_packages:
          - gfortran
    - <<: *breakage
      env: PKG=CaNNOLeS         VERSION=master
    - <<: *breakage
      env: PKG=CaNNOLeS         VERSION=stable
    - <<: *breakage
      env: PKG=NLPModelsIpopt   VERSION=master
    - <<: *breakage
      env: PKG=NLPModelsIpopt   VERSION=stable
    - <<: *breakage
      env: PKG=NLPModelsJuMP    VERSION=master
    - <<: *breakage
      env: PKG=NLPModelsJuMP    VERSION=stable
    - <<: *breakage
      env: PKG=QuadraticModels  VERSION=master
    - <<: *breakage
      env: PKG=QuadraticModels  VERSION=stable
    - <<: *breakage
      env: PKG=SolverTools      VERSION=master
    - <<: *breakage
      env: PKG=SolverTools      VERSION=stable
    - stage: "Breakage Deploy"
      julia: 1
      os: linux
      if: type = pull_request AND fork = false
      script:
        - julia -e 'using Pkg; pkg"add Git"; pkg"add GitHub"; pkg"add JSON"; include("test/test-breakage-deploy.jl")'
      after_success: skip
    - stage: Documentation
      julia: 1
      os: linux
      script:
        - julia --project=docs -e 'using Pkg; Pkg.instantiate(); Pkg.develop(PackageSpec(path=pwd()))'
        - julia --project=docs --color=yes docs/make.jl
      after_success: skip

after_success:
  - julia -e 'if Sys.islinux()
      using Pkg; Pkg.add("Coverage"); using Coverage; Coveralls.submit(Coveralls.process_folder())
    end'
